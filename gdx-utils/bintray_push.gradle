apply plugin: 'java'
apply plugin: "maven-publish"
apply plugin: 'maven'

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar,  dependsOn: javadoc) {
    classifier = 'javadoc'
    //from javadoc
    //from 'build/docs/javadoc'
    from javadoc.destinationDir
    //options.encoding = 'UTF-8'
    //options.addStringOption('Xdoclint:none', '-quiet')
}

artifacts {
    archives javadocJar, sourcesJar
}

javadoc {
    def generateJavadoc = project.hasProperty("generateJavadoc");
    onlyIf { (gradle.taskGraph.hasTask("uploadArchives")) || generateJavadoc }

    options.encoding = 'UTF-8'
    options.addStringOption('Xdoclint:none', '-quiet')
}

def pomConfig = {
    licenses {
        license {
            name POM_LICENCE_NAME
            url POM_LICENCE_URL
            distribution POM_LICENCE_DIST
        }
    }
    developers {
        developer {
            id POM_DEVELOPER_ID
            name POM_DEVELOPER_NAME
            email POM_DEVELOPER_EMAIL
        }
    }
    scm {
        connection POM_SCM_CONNECTION
        developerConnection POM_SCM_DEV_CONNECTION
        url POM_SCM_URL
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId GROUP
            artifactId POM_ARTIFACT_ID
            version VERSION_NAME
            pom.withXml {
                def root = asNode()
                root.appendNode('name', POM_NAME)
                root.appendNode('description', POM_DESCRIPTION)
                root.appendNode('url',POM_URL)
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = BINTRAY_USERNAME
    key = BINTRAY_API_KEY

   publications = ['MyPublication']

    //configurations = ['archives']
    dryRun = false //[Default: false] Whether to run this as dry-run, without deploying
    publish = true //[Default: false] Whether version should be auto published after an upload
    override = true //[Default: false] Whether to override version artifacts already published

    pkg {
        repo = BINTRAY_REPO_TYPE
        name = BINTRAY_PACKAGE
        desc = POM_DESCRIPTION

        websiteUrl = POM_URL
        issueTrackerUrl = 'https://github.com/itsabhiaryan/utils/issues'
        vcsUrl = 'https://github.com/itsabhiaryan/utils.git'

        licenses = ['Apache-2.0']
        labels = ['gear', 'gore', 'gorilla']
        publicDownloadNumbers = true

        githubRepo = 'itsabhiaryan/utils' //Optional Github repository
        githubReleaseNotesFile = 'README.md' //Optional Github readme file

        version {
            name = VERSION_NAME
            //desc = //Optional - Version-specific description'
            released  = new Date()
            //vcsTag = '1.3.0'
            //attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']

            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = PASSPHRASE //Optional. The passphrase for GPG signing'
            }

            //Optional configuration for Maven Central sync of the version
            mavenCentralSync {
                sync = true //[Default: true] Determines whether to sync the version to Maven Central.
                user = USERTOKEN //OSS user token: mandatory
                password = USERPASS //OSS user password: mandatory
                close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
            }
        }
    }
}



